name: Package Helm ECR
description: Package a helm chart and deploy to an AWS ECR repository using OCI
branding:
  icon: hard-drive
  color: blue
inputs:
  aws-access-key-id:
    description: The AWS access Key id
    required: true
  aws-secret-access-key:
    description: The AWS access key
    required: true
  ecr-repository-name:
    description: the name of the ecr repository
    required: true
  aws-region:
      description: The AWS region, default eu-west-1
      default: eu-west-1
      required: false
  chart-path:
    description: the directory path to the specified chart
    required: true
runs:
  using: "composite"
  steps:
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    # This is  an un-official build that allows helm login to the ECR
    - uses: aws-actions/amazon-ecr-login@arjraman
      id: login-ecr
    - uses: int128/create-ecr-repository-action@v1
      with:
        repository: ${{ inputs.ecr-repository-name }}
    - name: Install PyBump
      run: |
        python3 -m pip install pybump
      shell: bash
    - name: Helm Chart
      env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr-repository-name }}
          HELM_EXPERIMENTAL_OCI: "1"
      run : |
        version=$(pybump get --file ${{ inputs.chart-path }}/Chart.yaml)
        helm package \
        ${{ inputs.chart-path }} \
        --app-version $version \
        --version $version
        echo pushing $(basename ${{ inputs.chart-path }})-$version.tgz to oci://$ECR_REGISTRY
        helm push $(basename ${{ inputs.chart-path }})-$version.tgz oci://$ECR_REGISTRY
      shell: bash
